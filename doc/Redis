Redis主从复制
主从复制，是指将一台Redis服务器的数据，复制到其他的Redis服务器。
前者称为主节点(master)，后者称为从节点(slave)；数据的复制是单向的，只能由主节点到从节点。
持久化侧重解决的是Redis数据的单机备份问题（从内存到硬盘的备份）；
主从复制侧重解决数据的多机热备；此外，主从复制还可以实现负载均衡和故障恢复。
主从复制作用：
    数据冗余（数据的热备份，是持久化之外的一种数据冗余方式）
    故障恢复（主节点出现问题时，可以由从节点提供服务，实现快速的故障恢复）
    负载均衡（读写分离，由主节点提供写服务，由从节点提供读服务）
    高可用基石（哨兵和集群能够实施的基础）
主从复制实现原理：
    连接建立阶段
        保存主节点信息
            从节点开启主从复制：slaveof <masterip> <masterport>
            slaveof是异步命令，从节点完成主节点ip和port的保存后，向发送slaveof命令的客户端直接返回OK，实际的复制操作在这之后才开始进行。
        建立socket连接
            从节点每秒1次调用复制定时函数replicationCron()，根据主节点的ip和port，创建socket连接；
            从节点：为该socket建立一个专门处理复制工作的文件事件处理器，负责后续的复制工作，如接收RDB文件、接收命令传播等。
            主节点：接收到从节点的socket连接后（即accept之后），为该socket创建相应的客户端状态，
            并将从节点看做是连接到主节点的一个客户端，后面的步骤会以从节点向主节点发送命令请求的形式来进行。
        发送ping命令
            发送ping命令进行首次请求，目的是：检查socket连接是否可用，以及主节点当前是否能够处理请求；
        身份验证
            如果从节点中设置了masterauth选项，则从节点需要向主节点进行身份验证；
        发送从节点端口信息
            身份验证之后，从节点会向主节点发送其监听的端口号，主节点将该信息保存到该从节点对应的客户端的slave_listening_port字段中；
    数据同步阶段
        主从节点之间的连接建立以后，便可以开始进行数据同步，该阶段可以理解为从节点数据的初始化；
        根据主从节点当前状态的不同，可以分为全量复制和部分复制；
        需要注意的是，在数据同步阶段之前，从节点是主节点的客户端，主节点不是从节点的客户端；而到了这一阶段及以后，主从节点互为客户端；
    命令传播阶段
        主节点将自己执行的写命令发送给从节点，从节点接收命令并执行，从而保证主从节点数据的一致性；
        主从节点还维持着心跳机制：PING和REPLCONF ACK
全量复制和部分复制
心跳机制
应用中的问题
    读写分离及其中的问题
        延迟与不一致问题
        数据过期问题

Redis哨兵（Redis Sentinel）
它基于Redis主从复制，主要作用便是解决主节点故障恢复的自动化问题，进一步提高系统的高可用性；
缺陷：写操作无法负载均衡；存储能力受到单机的限制。
哨兵的核心功能是主节点的自动故障转移。

Redis集群（Redis Cluster）
解决了写操作无法负载均衡，以及存储能力受到单机限制的问题，实现了较为完善的高可用方案。
集群由多个节点(Node)组成，Redis的数据分布在这些节点中。
集群中的节点分为主节点和从节点：只有主节点负责读写请求和集群信息的维护；从节点只进行主节点数据和状态信息的复制。
作用：
a、数据分区：数据分区(或称数据分片)是集群最核心的功能。