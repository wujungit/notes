一、Maven
1、私服Nexus
私服是一个特殊的远程仓库，它是架设在局域网内的仓库服务；
Maven构建时，先从私服请求，如果私服上没有，则从外部的远程仓库下载，缓存在私服上；
好处：节省自己的外网带宽，加速Maven的构建，部署第三方构件，提高稳定性，增强控制，权限管理，降低中央仓库的负荷；
2、常用命令
mvn compile（编译类文件）
mvn package（打包）
mvn install（包含mvn compile，mvn package，然后上传到本地仓库）
mvn deploy（包含mvn install，然后，上传到私服）
mvn clean（清除target目录）
mvn -Dtest package（只打包不测试）
mvn clean install-U（强制检查更新）
mvn clean install-e（打印完整的堆栈，方便分析错误）
创建Maven项目
mvn archetype:generate
mvn archetype:generate -DgroupId=com.kanghe -DartifactId=test -Dversion=1.0
3、pom.xml
groupId、artifactId、version（依赖的坐标）
dependencyManagement（声明依赖，并不实现引入，管理依赖jar版本号）
dependencies（项目依赖）
modules（聚合工程的模块定义）
build
    plugins（构建过程中用到的插件）
    plugin
        maven-compiler-plugin（编译Java源码）
        maven-dependency-plugin（复制依赖的jar包到指定的文件夹里）
二、Dubbo

三、Zookeeper

四、Redis
Redis3.0
Redis内存模型
Redis的5种对象类型（字符串、哈希、列表、集合、有序集合）

Redis高可用
    持久化：数据备份，将数据存储在硬盘，保证数据不会因进程退出而丢失；
    复制：数据的多机备份，以及对于读操作的负载均衡和简单的故障恢复；
    哨兵：自动化的故障恢复；
    集群：

Redis持久化
Redis是内存数据库，数据都是存储在内存中，为了避免进程退出导致数据的永久丢失，需要定期将Redis中的数据以某种形式(数据或命令)从内存保存到硬盘；
当下次Redis重启时，利用持久化文件实现数据恢复。除此之外，为了进行灾难备份，可以将持久化文件拷贝到一个远程位置。
    RDB持久化（快照持久化，将进程数据写入文件）
        触发条件：手动触发和自动触发
        命令：bgsave（创建子进程创建RDB文件）
        save m n（指定当m秒内发生n次变化时，会触发bgsave）
        其他自动触发机制：在主从复制场景下，如果从节点执行全量复制操作，则主节点会执行bgsave命令，并将rdb文件发送给从节点；
                       执行shutdown命令时，自动执行rdb持久化；
        执行流程：1)Redis父进程首先判断：当前是否在执行save，或bgsave/bgrewriteaof（后面会详细介绍该命令）的子进程，
                  如果在执行则bgsave命令直接返回。bgsave/bgrewriteaof 的子进程不能同时执行，
                  主要是基于性能方面的考虑：两个并发的子进程同时执行大量的磁盘写操作，可能引起严重的性能问题。
                2)父进程执行fork操作创建子进程，这个过程中父进程是阻塞的，Redis不能执行来自客户端的任何命令；
                3)父进程fork后，bgsave命令返回”Background saving started”信息并不再阻塞父进程，并可以响应其他命令；
                4)子进程创建RDB文件，根据父进程内存快照生成临时快照文件，完成后对原有文件进行原子替换；
                5)子进程发送信号给父进程表示完成，父进程更新统计信息；
    AOF持久化（将Redis执行的每次写命令记录到单独的日志文件中）
        当Redis重启时再次执行AOF文件中的命令来恢复数据，与RDB相比，AOF的实时性更好，因此已成为主流的持久化方案。
        开启AOF
            Redis服务器默认开启RDB，关闭AOF；要开启AOF，需要在配置文件中配置：appendonly yes
        执行流程
            命令追加(append)：将Redis的写命令追加到缓冲区aof_buf；
            文件写入(write)和文件同步(sync)：根据不同的同步策略将aof_buf中的内容同步到硬盘；
            文件重写(rewrite)：定期重写AOF文件，达到压缩的目的。
                过期的数据不再写入文件;
                无效的命令不再写入文件;
                多条命令可以合并为一个;
            文件重写的触发，分为手动触发（bgrewriteaof）和自动触发：
    持久化策略选择：
        如果可以接受十几分钟或更多的数据丢失，选择RDB对Redis的性能更加有利；如果只能接受秒级别的数据丢失，应该选择AOF；
        主从环境下，
        master：完全关闭持久化（包括RDB和AOF），这样可以让master的性能达到最好；
        slave：关闭RDB，开启AOF（如果对数据安全要求不高，开启RDB关闭AOF也可以），并定时对持久化文件进行备份（如备份到其他文件夹，
        并标记好备份的时间）；然后关闭AOF的自动重写，然后添加定时任务，在每天Redis闲时（如凌晨12点）调用bgrewriteaof。



Redis主从复制

五、MQ

六、Apollo

七、Session跨域共享

八、自动化部署

九、Web服务器

十、持久层高并发

十一、分布式接口

十二、Spring Cloud

十三、搜素引擎

十四、容器技术
1、Docker

十五、JVM优化

十六、Java程序性能优化

十七、数据库优化

十八、服务器优化

十九、Linux服务器优化
